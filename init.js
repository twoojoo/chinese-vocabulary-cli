const { execSync } = require("child_process")

const inputDecks = process.argv[2]?.split(",") || []

const decks = {
	hsk1: "的,我,你,是,了,不,在,他,我们,好,有,这,会,吗,什么,说,她,想,一,很,人,那,来,都,个,能,去,和,做,上,没有,看,怎么,现在,点,呢,太,里,听,谁,多,时候,下,谢谢,先生,喜欢,大,东西,小,叫,爱,年,请,回,工作,钱,吃,开,家,哪,朋友,妈妈,今天,几,爸爸,些,怎么样,对不起,住,三,高兴,买,医生,哪儿,名字,认识,坐,喝,写,月,号,狗,岁,看见,打电话,喂,儿子,漂亮,分钟,再见,本,明天,多少,块,女儿,小姐,衣服,水,学校,电影,书,四,五,医院,少,没关系,飞机,二,电视,读,后面,昨天,睡觉,六,老师,星期,十,猫,电脑,热,学生,下午,字,学习,冷,前面,八,中国,七,菜,桌子,出租车,天气,茶,九,商店,椅子,同学,一点儿,苹果,饭店,中午,上午,水果,杯子,下雨,米饭,北京,汉语,不客气",
	hsk2: "的,我,你,是,了,不,在,他,我们,好,有,这,会,吗,什么,说,她,想,一,很,人,那,来,都,个,能,去,和,做,上,没有,看,怎么,现在,点,呢,太,里,听,谁,多,时候,下,谢谢,先生,喜欢,大,东西,小,叫,爱,年,请,回,工作,钱,吃,开,家,哪,朋友,妈妈,今天,几,爸爸,些,怎么样,对不起,住,三,高兴,买,医生,哪儿,名字,认识,坐,喝,写,月,号,狗,岁,看见,打电话,喂,儿子,漂亮,分钟,再见,本,明天,多少,块,女儿,小姐,衣服,水,学校,电影,书,四,五,医院,少,没关系,飞机,二,电视,读,后面,昨天,睡觉,六,老师,星期,十,猫,电脑,热,学生,下午,字,学习,冷,前面,八,中国,七,菜,桌子,出租车,天气,茶,九,商店,椅子,同学,一点儿,苹果,饭店,中午,上午,水果,杯子,下雨,米饭,北京,汉语,不客气,就,要,知道,吧,到,对,也,还,让,给,过,得,真,着,可以,别,走,告诉,因为,再,快,但是,已经,为什么,觉得,它,从,找,最,可能,次,出,孩子,所以,两,错,等,问题,一起,开始,时间,事情,一下,非常,希望,准备,比,问,件,意思,第一,进,大家,新,您,穿,送,玩,长,小时,完,每,公司,帮助,晚上,说话,门,女,忙,卖,高,房间,路,懂,正在,笑,远,妻子,丈夫,离,往,男,眼睛,快乐,虽然,早上,药,身体,黑,咖啡,日,休息,外,生日,哥哥,票,手机,洗,跳舞,弟弟,妹妹,红,慢,近,白,姐姐,介绍,鱼,累,课,上班,旁边,运动,去年,报纸,颜色,机场,唱歌,千,好吃,考试,左边,姓,百,雪,贵,生病,游泳,牛奶,右边,便宜,起床,鸡蛋,题,零,手表,旅游,服务员,宾馆,教室,跑步,阴,面条,铅笔,火车站,西瓜,羊肉,晴,公共汽车,打篮球,踢足球",
}

const errors = {}

for (const [name, chars] of Object.entries(decks)) {
	if (inputDecks?.length && !inputDecks.includes(name)) {
		continue
	}

	for (const char of chars.split(",")) {
		console.log(name, "- inserting char", char)
		try {
			execSync("node ./dist/index.js word add -d " + name + " " + char)
		} catch (err) {
			if (err.message?.includes("already exist in deck")) {
				continue
			}

			(errors[name] ||= {})[char] = err?.message
		}
	}
}

if (Object.keys(errors).length > 0) {
	console.error("Errors occurred while initializing decks:")
	for (const [deck, chars] of Object.entries(errors)) {
		console.error(`Deck: ${deck}`)
		for (const [char, error] of Object.entries(chars)) {
			console.error(`  Char: ${char} - Error: ${error}`)
		}
	}
}